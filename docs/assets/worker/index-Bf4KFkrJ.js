var Xt=Object.defineProperty;var qt=(e,t,s)=>t in e?Xt(e,t,{enumerable:!0,configurable:!0,writable:!0,value:s}):e[t]=s;var b=(e,t,s)=>(qt(e,typeof t!="symbol"?t+"":t,s),s);import{Q as $,M as k}from"./inside-KOB7JHHP-MQbaLpa6.js";import"../search-worker-entry-CQUcisg8.js";var pt=class{constructor(e,t){b(this,"prefixFree",!0);b(this,"gripnames",[]);this.facenames=e,t&&(this.gripnames=t);for(let s=0;this.prefixFree&&s<e.length;s++)for(let i=0;this.prefixFree&&i<e.length;i++)s!==i&&e[s].startsWith(e[i])&&(this.prefixFree=!1)}setGripNames(e){this.gripnames=e}splitByFaceNames(e){const t=[];let s=0;for(;s<e.length;){s>0&&s<e.length&&e[s]==="_"&&s++;let i=-1;for(let n=0;n<this.facenames.length;n++)e.substr(s).startsWith(this.facenames[n])&&(i<0||this.facenames[n].length>this.facenames[i].length)&&(i=n);if(i>=0)t.push(i),s+=this.facenames[i].length;else throw new Error(`Could not split ${e} into face names.`)}return t}joinByFaceIndices(e){let t="";const s=[];for(let i=0;i<e.length;i++)s.push(t),s.push(this.facenames[e[i]]),this.prefixFree||(t="_");return s.join("")}spinmatch(e,t){if(e===t)return!0;try{const s=this.splitByFaceNames(e),i=this.splitByFaceNames(t);if(s.length!==i.length&&s.length<3)return!1;for(let n=0;n<s.length;n++){for(let r=0;r<n;r++)if(s[n]===s[r])return!1;let o=!1;for(let r=0;r<i.length;r++)if(s[n]===i[r]){o=!0;break}if(!o)return!1}return!0}catch{return!1}}spinmatchv(e,t){return e.endsWith("v")&&t.endsWith("v")?this.spinmatch(e.slice(0,e.length-1),t.slice(0,t.length-1)):this.spinmatch(e,t)}unswizzle(e){(e.endsWith("v")||e.endsWith("w"))&&e[0]<="Z"&&(e=e.slice(0,e.length-1));const t=e.toUpperCase();for(let s=0;s<this.gripnames.length;s++){const i=this.gripnames[s];if(this.spinmatch(t,i))return i}return e}},St=class{notationToInternal(e){return e}notationToExternal(e){return e}},_t=class{constructor(e,t){this.child=e,this.sw=t}notationToInternal(e){return e.family==="T"&&e.innerLayer===void 0&&e.outerLayer===void 0?new k(new $("FLRv",e.innerLayer,e.outerLayer),e.amount):this.child.notationToInternal(e)}notationToExternal(e){let t=e.family;return t.length>0&&t[t.length-1]==="v"&&(t=t.substring(0,t.length-1)),this.sw.spinmatch(t,"FLUR")?new k(new $("T",e.innerLayer,e.outerLayer),e.amount):this.child.notationToExternal(e)}},Rt=class{constructor(e,t){this.internalNames=e,this.externalNames=t}convertString(e,t,s){let i="";(e.endsWith("v")||e.endsWith("v"))&&e<="_"&&(i=e.slice(e.length-1),e=e.slice(0,e.length-1));const n=e.toUpperCase();let o=!1;return e!==n&&(o=!0,e=n),e=s.joinByFaceIndices(t.splitByFaceNames(e)),o&&(e=e.toLowerCase()),e+i}convert(e,t,s){const i=e.family,n=this.convertString(i,t,s);return i===n?e:new k(new $(n,e.innerLayer,e.outerLayer),e.amount)}notationToInternal(e){return this.convert(e,this.externalNames,this.internalNames)}notationToExternal(e){return this.convert(e,this.internalNames,this.externalNames)}},te=class{constructor(e){this.child=e}notationToInternal(e){if(e.innerLayer===void 0&&e.outerLayer===void 0){if(Math.abs(e.amount)===1){if(e.family==="R++")return new k(new $("L",3,2),-2*e.amount);if(e.family==="R--")return new k(new $("L",3,2),2*e.amount);if(e.family==="D++")return new k(new $("U",3,2),-2*e.amount);if(e.family==="D--")return new k(new $("U",3,2),2*e.amount);if(e.family==="R_PLUSPLUS_")return new k(new $("L",3,2),-2*e.amount);if(e.family==="D_PLUSPLUS_")return new k(new $("U",3,2),-2*e.amount)}if(e.family==="y")return new k("Uv",e.amount);if(e.family==="x"&&Math.abs(e.amount)===2)return new k("ERv",e.amount/2)}return this.child.notationToInternal(e)}notationToExternal(e){return e.family==="ERv"&&Math.abs(e.amount)===1?new k(new $("x",e.innerLayer,e.outerLayer),e.amount*2):e.family==="ILv"&&Math.abs(e.amount)===1?new k(new $("x",e.innerLayer,e.outerLayer),-e.amount*2):e.family==="Uv"?new k(new $("y",e.innerLayer,e.outerLayer),e.amount):e.family==="Dv"?new k("y",-e.amount):this.child.notationToExternal(e)}},ee=class{constructor(e){this.slices=e}notationToInternal(e){const t=e.family;return e.innerLayer||e.outerLayer||(t==="x"?e=new k("Rv",e.amount):t==="y"?e=new k("Uv",e.amount):t==="z"&&(e=new k("Fv",e.amount)),(this.slices&1)===1&&(t==="E"?e=new k(new $("D",(this.slices+1)/2),e.amount):t==="M"?e=new k(new $("L",(this.slices+1)/2),e.amount):t==="S"&&(e=new k(new $("F",(this.slices+1)/2),e.amount))),this.slices>2&&(t==="e"?e=new k(new $("D",this.slices-1,2),e.amount):t==="m"?e=new k(new $("L",this.slices-1,2),e.amount):t==="s"&&(e=new k(new $("F",this.slices-1,2),e.amount)))),e}notationToExternal(e){const t=e.family;if(!(e.innerLayer||e.outerLayer)){if(t==="Rv")return new k("x",e.amount);if(t==="Uv")return new k("y",e.amount);if(t==="Fv")return new k("z",e.amount);if(t==="Lv")return new k("x",-e.amount);if(t==="Dv")return new k("y",-e.amount);if(t==="Bv")return new k("z",-e.amount)}return e}},se={U:"frl",L:"fld",R:"fdr",B:"dlr",u:"FRL",l:"FLD",r:"FDR",b:"DLR",Uv:"FRLv",Lv:"FLDv",Rv:"FDRv",Bv:"DLRv",D:"D",F:"F",BL:"L",BR:"R"},ie={U:"FRL",L:"FLD",R:"FDR",B:"DLR",u:"frl",l:"fld",r:"fdr",b:"dlr",Uv:"FRLv",Lv:"FLDv",Rv:"FDRv",Bv:"DLRv",D:"D",F:"F",BL:"L",BR:"R",d:"d",f:"f",bl:"l",br:"r"},Dt={U:"FRL",L:"FLD",R:"FDR",B:"DLR"},kt=new $("y"),Et=new $("Dv"),Tt=class{constructor(e){b(this,"wcaHack",!1);b(this,"map",se);this.child=e}notationToInternal(e){if(this.wcaHack&&e.innerLayer===2&&e.outerLayer===null){const s=Dt[e.family];if(s)return new k(new $(s,e.innerLayer,e.outerLayer),e.amount)}const t=this.map[e.family];return t?new k(new $(t,e.innerLayer,e.outerLayer),e.amount):kt.isIdentical(e.quantum)?new k(Et,-e.amount):null}notationToExternal(e){if(this.wcaHack&&e.innerLayer===2&&e.outerLayer===null){for(const[t,s]of Object.entries(Dt))if(this.child.spinmatch(e.family,s))return new k(new $(t,e.innerLayer,e.outerLayer),e.amount)}for(const[t,s]of Object.entries(this.map))if(this.child.spinmatch(e.family,s))return new k(new $(t,e.innerLayer,e.outerLayer),e.amount);return Et.isIdentical(e.quantum)?new k(kt,-e.amount):null}},ne=class extends Tt{constructor(t){super(t);b(this,"wcaHack",!0);this.map=ie}},jt={U:"UBL",UL:"ULF",F:"UFR",UR:"URB",B:"DBL",D:"DFR",L:"DLF",R:"DRB",Uv:"UBLv",ULv:"ULFv",Fv:"UFRv",URv:"URBv",Bv:"DBLv",Dv:"DFRv",Lv:"DLFv",Rv:"DRBv"},dt=new $("x"),Ct=new $("Rv"),oe=new $("Lv"),gt=new $("y"),Ut=new $("Uv"),re=new $("Dv"),bt=new $("z"),Pt=new $("Fv"),ae=new $("Bv"),le=class{constructor(e){this.child=e}notationToInternal(e){if(e.innerLayer||e.outerLayer)return null;const t=jt[e.family];return t?new k(new $(t,e.outerLayer,e.innerLayer),e.amount):dt.isIdentical(e.quantum)?new k(Ct,e.amount):gt.isIdentical(e.quantum)?new k(Ut,e.amount):bt.isIdentical(e.quantum)?new k(Pt,e.amount):null}notationToExternal(e){for(const[t,s]of Object.entries(jt))if(this.child.spinmatchv(e.family,s))return new k(new $(t,e.innerLayer,e.outerLayer),e.amount);return Ct.isIdentical(e.quantum)?new k(dt,e.amount):oe.isIdentical(e.quantum)?new k(dt,-e.amount):Ut.isIdentical(e.quantum)?new k(gt,e.amount):re.isIdentical(e.quantum)?new k(gt,-e.amount):Pt.isIdentical(e.quantum)?new k(bt,e.amount):ae.isIdentical(e.quantum)?new k(bt,-e.amount):null}};function he(e,t){const s={...e,moves:{}};for(const[i,n]of Object.entries(e.moves)){let o=i,r="";["v","w"].includes(i.at(-1))&&(o=i.slice(0,-1),r=i.slice(-1));const f=t.notationToExternal(k.fromString(o));if(!f)continue;const l=f+r;if(!l)throw new Error(`Missing external move name for: ${i.toString()}`);s.moves[l.toString()]=n}return s}function Te(e){let t=0;const s={};for(;t<e.length&&e[t][0]==="-";){const n=e[t++];if(n==="--rotations")s.addRotations=!0;else if(n==="--allmoves")s.allMoves=!0;else if(n==="--outerblockmoves")s.outerBlockMoves=!0;else if(n==="--vertexmoves")s.vertexMoves=!0;else if(n==="--nocorners")s.includeCornerOrbits=!1;else if(n==="--noedges")s.includeEdgeOrbits=!1;else if(n==="--noorientation")s.fixedOrientation=!0;else if(n==="--nocenters")s.includeCenterOrbits=!1;else if(n==="--omit")s.excludeOrbits=e[t].split(","),t++;else if(n==="--moves")s.moveList=e[t].split(","),t++;else if(n==="--optimize")s.optimizeOrbits=!0;else if(n==="--scramble")s.scrambleAmount=100;else if(n==="--fixcorner")s.fixedPieceType="v";else if(n==="--fixedge")s.fixedPieceType="e";else if(n==="--fixcenter")s.fixedPieceType="f";else if(n==="--orientcenters")s.orientCenters=!0;else if(n==="--puzzleorientation")s.puzzleOrientation=JSON.parse(e[t]),t++;else throw new Error(`Bad option: ${n}`)}return{puzzleDescription:Wt(e.slice(t).join(" ")),options:s}}var ce=class{constructor(e={}){b(this,"verbosity",0);b(this,"allMoves",!1);b(this,"outerBlockMoves");b(this,"vertexMoves",!1);b(this,"addRotations",!1);b(this,"moveList",null);b(this,"fixedOrientation",!1);b(this,"fixedPieceType",null);b(this,"orientCenters",!1);b(this,"includeCornerOrbits",!0);b(this,"includeCenterOrbits",!0);b(this,"includeEdgeOrbits",!0);b(this,"excludeOrbits",[]);b(this,"optimizeOrbits",!1);b(this,"grayCorners",!1);b(this,"grayCenters",!1);b(this,"grayEdges",!1);b(this,"puzzleOrientation",null);b(this,"puzzleOrientations",null);b(this,"scrambleAmount",0);Object.assign(this,e)}},wt=[],vt=[];function nt(e){if(!wt[e]){const t=Array(e);for(let s=0;s<e;s++)t[s]=0;wt[e]=t}return wt[e]}function st(e){if(!vt[e]){const t=Array(e);for(let s=0;s<e;s++)t[s]=s;vt[e]=t}return vt[e]}function fe(e){return new at(st(e))}function ue(e){let t=BigInt(1);for(;e>1;)t*=BigInt(e),e--;return t}function me(e,t){if(e>t){const s=e;e=t,t=s}for(;e>0;){const s=t%e;t=e,e=s}return t}function Nt(e,t){return e/me(e,t)*t}var at=class ht{constructor(t){b(this,"n");b(this,"p");this.n=t.length,this.p=t}toString(){return`Perm[${this.p.join(" ")}]`}mul(t){const s=Array(this.n);for(let i=0;i<this.n;i++)s[i]=t.p[this.p[i]];return new ht(s)}rmul(t){const s=Array(this.n);for(let i=0;i<this.n;i++)s[i]=this.p[t.p[i]];return new ht(s)}inv(){const t=Array(this.n);for(let s=0;s<this.n;s++)t[this.p[s]]=s;return new ht(t)}compareTo(t){for(let s=0;s<this.n;s++)if(this.p[s]!==t.p[s])return this.p[s]-t.p[s];return 0}toGap(){const t=new Array,s=new Array(this.n);for(let i=0;i<this.p.length;i++){if(s[i]||this.p[i]===i)continue;const n=new Array;for(let o=this.p[i];!s[o];o=this.p[o])n.push(1+o),s[o]=!0;t.push(`(${n.reverse().join(",")})`)}return t.join("")}toMathematica(){const t=new Array,s=new Array(this.n);for(let i=0;i<this.p.length;i++){if(s[i]||this.p[i]===i)continue;const n=new Array;for(let o=this.p[i];!s[o];o=this.p[o])n.push(1+o),s[o]=!0;t.push(`{${n.reverse().join(",")}}`)}return`Cycles[{${t.join(",")}}]`}order(){let t=1;const s=new Array(this.n);for(let i=0;i<this.p.length;i++){if(s[i]||this.p[i]===i)continue;let n=0;for(let o=i;!s[o];o=this.p[o])n++,s[o]=!0;t=Nt(t,n)}return t}},Lt=class{constructor(e,t){this.size=e,this.mod=t}reassemblySize(){return ue(this.size)*BigInt(this.mod)**BigInt(this.size)}},pe=0;function ut(e,t){const s=k.fromString(t),i=e.notationToExternal(s);return i===null||s===i?t:i.toString()}var At=class Gt{constructor(t,s,i,n,o,r,f){this.orbitnames=t,this.orbitdefs=s,this.solved=i,this.movenames=n,this.moveops=o,this.isRotation=r,this.forcenames=f}toKTransformationData(t){const s={};for(let i=0;i<this.orbitnames.length;i++)s[this.orbitnames[i]]=t.orbits[i].toKTransformationOrbitData();return s}toKPatternData(t){const s={};for(let i=0;i<this.orbitnames.length;i++)s[this.orbitnames[i]]=t.orbits[i].toKPatternOrbitData();return s}static transformToKTransformationData(t,s){const i={};for(let n=0;n<t.length;n++)i[t[n]]=s.orbits[n].toKTransformationOrbitData();return i}describeSet(t,s,i){const n=this.orbitdefs[t].size,o=new Array(n);for(let r=0;r<n;r++)o[r]=[];for(let r=0;r<this.movenames.length;r++){if(this.isRotation[r])continue;let f=this.movenames[r];this.forcenames[r]||(f=ut(i,f),f[f.length-1]==="'"&&(f=f.substring(0,f.length-1)));const l=this.moveops[r].orbits[t];for(let h=0;h<n;h++)(l.perm[h]!==h||l.ori[h]!==0)&&o[h].push(f)}for(let r=0;r<n;r++)s.push(`# ${r+1} ${o[r].join(" ")}`)}toKsolve(t,s=new St){const i=[];i.push(`Name ${t}`),i.push("");for(let n=0;n<this.orbitnames.length;n++)i.push(`Set ${this.orbitnames[n]} ${this.orbitdefs[n].size} ${this.orbitdefs[n].mod}`),this.describeSet(n,i,s);i.push(""),i.push("Solved");for(let n=0;n<this.orbitnames.length;n++)this.solved.orbits[n].appendDefinition(i,this.orbitnames[n],!1,!1);i.push("End");for(let n=0;n<this.movenames.length;n++){i.push("");let o=this.movenames[n];this.forcenames[n]||(o=ut(s,this.movenames[n]));let r=!1;o[o.length-1]==="'"&&(r=!0,o=o.substring(0,o.length-1)),i.push(`Move ${o}`);for(let f=0;f<this.orbitnames.length;f++)r?this.moveops[n].orbits[f].inv().appendDefinition(i,this.orbitnames[f],!0):this.moveops[n].orbits[f].appendDefinition(i,this.orbitnames[f],!0);i.push("End")}return i}toKPuzzleDefinition(t){const s=[],i={};for(let o=0;o<this.orbitnames.length;o++){s.push({orbitName:this.orbitnames[o],numPieces:this.orbitdefs[o].size,numOrientations:this.orbitdefs[o].mod});const r=this.solved.orbits[o].toKTransformationOrbitData();i[this.orbitnames[o]]={pieces:r.permutation,orientation:r.orientationDelta}}const n={};if(t)for(let o=0;o<this.movenames.length;o++)n[this.movenames[o]]=this.toKTransformationData(this.moveops[o]);return{name:`PG3D #${++pe}`,orbits:s,defaultPattern:i,moves:n}}optimize(){const t=[],s=[],i=[],n=[];for(let o=0;o<this.moveops.length;o++)n.push([]);for(let o=0;o<this.orbitdefs.length;o++){const r=this.orbitdefs[o].mod,f=this.orbitdefs[o].size,l=new Ot(f),h=new Array(this.orbitdefs[o].size);for(let m=0;m<f;m++)h[m]=!1;for(let m=0;m<this.moveops.length;m++)for(let a=0;a<f;a++)(this.moveops[m].orbits[o].perm[a]!==a||this.moveops[m].orbits[o].ori[a]!==0)&&(this.isRotation[m]||(h[a]=!0),l.union(a,this.moveops[m].orbits[o].perm[a]));let w=!0;if(r>1){w=!1;const m=new Ot(this.orbitdefs[o].size*r);for(let a=0;a<this.moveops.length;a++)for(let u=0;u<f;u++)if(this.moveops[a].orbits[o].perm[u]!==u||this.moveops[a].orbits[o].ori[u]!==0)for(let y=0;y<r;y++)m.union(u*r+y,this.moveops[a].orbits[o].perm[u]*r+(y+this.moveops[a].orbits[o].ori[u])%r);for(let a=0;!w&&a<f;a++)for(let u=1;u<r;u++)m.find(a*r)===m.find(a*r+u)&&(w=!0);for(let a=0;!w&&a<f;a++)for(let u=0;u<a;u++)this.solved.orbits[o].perm[a]===this.solved.orbits[o].perm[u]&&(w=!0)}let d=-1,v=!1;for(let m=0;m<this.orbitdefs[o].size;m++)if(h[m]){const a=l.find(m);d<0?d=a:d!==a&&(v=!0)}for(let m=0;m<this.orbitdefs[o].size;m++){if(!h[m]||l.find(m)!==m)continue;const u=[],y=[];let L=0;for(let g=0;g<this.orbitdefs[o].size;g++)l.find(g)===m&&(u[L]=g,y[g]=L,L++);if(v?t.push(`${this.orbitnames[o]}_p${m}`):t.push(this.orbitnames[o]),w){s.push(new Lt(L,this.orbitdefs[o].mod)),i.push(this.solved.orbits[o].remapVS(u,L));for(let g=0;g<this.moveops.length;g++)n[g].push(this.moveops[g].orbits[o].remap(u,y,L))}else{s.push(new Lt(L,1)),i.push(this.solved.orbits[o].remapVS(u,L).killOri());for(let g=0;g<this.moveops.length;g++)n[g].push(this.moveops[g].orbits[o].remap(u,y,L).killOri())}}}return new Gt(t,s,new Ht(i),this.movenames,n.map(o=>new Qt(o)),this.isRotation,this.forcenames)}scramble(t){this.solved=this.solved.mul(this.getScrambleTransformation(t))}getScrambleTransformation(t){t<100&&(t=100);const s=[];for(let n=0;n<this.moveops.length;n++)s[n]=this.moveops[n];for(let n=0;n<s.length;n++){const o=Math.floor(Math.random()*s.length),r=s[n];s[n]=s[o],s[o]=r}t<s.length&&(t=s.length);for(let n=0;n<t;n++){const o=Math.floor(Math.random()*s.length),r=Math.floor(Math.random()*s.length),f=Math.floor(Math.random()*this.moveops.length);s[o]=s[o].mul(s[r]).mul(this.moveops[f]),Math.random()<.1&&(s[o]=s[o].mul(this.moveops[f]))}let i=s[0];for(let n=1;n<s.length;n++)i=i.mul(s[n]);return i}reassemblySize(){let t=BigInt(1);for(let s=0;s<this.orbitdefs.length;s++)t*=this.orbitdefs[s].reassemblySize();return t}},Y,ot=(Y=class{constructor(t,s,i){this.perm=t,this.ori=s,this.orimod=i}static e(t,s){return new Y(st(t),nt(t),s)}mul(t){const s=this.perm.length,i=new Array(s);if(this.orimod===1){for(let n=0;n<s;n++)i[n]=this.perm[t.perm[n]];return new Y(i,this.ori,this.orimod)}else{const n=new Array(s);for(let o=0;o<s;o++)i[o]=this.perm[t.perm[o]],n[o]=(this.ori[t.perm[o]]+t.ori[o])%this.orimod;return new Y(i,n,this.orimod)}}inv(){const t=this.perm.length,s=new Array(t),i=new Array(t);for(let n=0;n<t;n++)s[this.perm[n]]=n,i[this.perm[n]]=(this.orimod-this.ori[n])%this.orimod;return new Y(s,i,this.orimod)}equal(t){const s=this.perm.length;for(let i=0;i<s;i++)if(this.perm[i]!==t.perm[i]||this.ori[i]!==t.ori[i])return!1;return!0}killOri(){const t=this.perm.length;for(let s=0;s<t;s++)this.ori[s]=0;return this.orimod=1,this}toPerm(){const t=this.orimod;if(t===1)return new at(this.perm);const s=this.perm.length,i=new Array(s*t);for(let n=0;n<s;n++)for(let o=0;o<t;o++)i[n*t+o]=t*this.perm[n]+(this.ori[n]+o)%t;return new at(i)}identicalPieces(){const t=[],s=this.perm.length,i=[];for(let n=0;n<s;n++){const o=this.perm[n];if(t[o]===void 0){const r=[n];t[o]=!0;for(let f=n+1;f<s;f++)this.perm[f]===o&&r.push(f);i.push(r)}}return i}order(){return this.toPerm().order()}isIdentity(){const t=this.perm.length;if(this.perm===st(t)&&this.ori===nt(t))return!0;for(let s=0;s<t;s++)if(this.perm[s]!==s||this.ori[s]!==0)return!1;return!0}zeroOris(){const t=this.perm.length;if(this.ori===nt(t))return!0;for(let s=0;s<t;s++)if(this.ori[s]!==0)return!1;return!0}remap(t,s,i){const n=new Array(i),o=new Array(i);for(let r=0;r<i;r++)n[r]=s[this.perm[t[r]]],o[r]=this.ori[t[r]];return new Y(n,o,this.orimod)}remapVS(t,s){const i=new Array(s),n=new Array(s);let o=0;const r=[];for(let f=0;f<s;f++){const l=this.perm[t[f]];r[l]===void 0&&(r[l]=o++),i[f]=r[l],n[f]=this.ori[t[f]]}return new Y(i,n,this.orimod)}appendDefinition(t,s,i,n=!0){if(!(n&&this.isIdentity())&&(t.push(s),t.push(this.perm.map(o=>o+1).join(" ")),!this.zeroOris()))if(i){const o=new Array(this.ori.length);for(let r=0;r<o.length;r++)o[this.perm[r]]=this.ori[r];t.push(o.join(" "))}else t.push(this.ori.join(" "))}toKTransformationOrbitData(){const t=this.perm.length;return this.isIdentity()?(Y.ktransformationCache[t]||(Y.ktransformationCache[t]={permutation:st(t),orientationDelta:nt(t)}),Y.ktransformationCache[t]):{permutation:this.perm,orientationDelta:this.ori}}toKPatternOrbitData(){const t=this.perm.length;return{pieces:this.perm,orientation:this.ori,orientationMod:nt(t)}}},b(Y,"ktransformationCache",[]),Y),Kt=class{constructor(e){this.orbits=e}internalMul(e){const t=[];for(let s=0;s<this.orbits.length;s++)t.push(this.orbits[s].mul(e.orbits[s]));return t}internalInv(){const e=[];for(const t of this.orbits)e.push(t.inv());return e}equal(e){for(let t=0;t<this.orbits.length;t++)if(!this.orbits[t].equal(e.orbits[t]))return!1;return!0}killOri(){for(const e of this.orbits)e.killOri();return this}toPerm(){const e=new Array;let t=0;for(const i of this.orbits){const n=i.toPerm();e.push(n),t+=n.n}const s=new Array(t);t=0;for(const i of e){for(let n=0;n<i.n;n++)s[t+n]=t+i.p[n];t+=i.n}return new at(s)}identicalPieces(){const e=[];let t=0;for(const s of this.orbits){const i=s.orimod,n=s.identicalPieces();for(let o=0;o<n.length;o++)e.push(n[o].map(r=>r*i+t));t+=i*s.perm.length}return e}order(){let e=1;for(const t of this.orbits)e=Nt(e,t.order());return e}},Qt=class ct extends Kt{mul(t){return new ct(this.internalMul(t))}mulScalar(t){if(t===0)return this.e();let s=this;for(t<0&&(s=s.inv(),t=-t);!(t&1);)s=s.mul(s),t>>=1;if(t===1)return s;let i=s,n=this.e();for(;t>0;)t&1&&(n=n.mul(i)),t>1&&(i=i.mul(i)),t>>=1;return n}inv(){return new ct(this.internalInv())}e(){return new ct(this.orbits.map(t=>ot.e(t.perm.length,t.orimod)))}},Ht=class Zt extends Kt{mul(t){return new Zt(this.internalMul(t))}},Ot=class{constructor(e){b(this,"heads");this.n=e,this.heads=new Array(e);for(let t=0;t<e;t++)this.heads[t]=t}find(e){let t=this.heads[e];return this.heads[t]===t||(t=this.find(this.heads[t]),this.heads[e]=t),t}union(e,t){const s=this.find(e),i=this.find(t);s<i?this.heads[i]=s:s>i&&(this.heads[s]=i)}};function de(e,t){const s=e.moveops.length;if(s>30)throw new Error("Canon info too big for bitmask");const i=[],n=[];for(let r=0;r<s;r++){const f=e.moveops[r];i.push(f.order());let l=0;for(let h=0;h<s;h++){if(h===r)continue;const w=e.moveops[h];f.mul(w).equal(w.mul(f))&&(l|=1<<h)}n.push(l)}let o={};o[0]=1;for(let r=0;r<100;r++){let f=0;const l={};let h=0;for(const w in o){const d=+w,v=o[d];f+=v,h++;for(let m=0;m<i.length;m++)if(!(d>>m&1)&&!(d&n[m]&(1<<m)-1)){const a=d&n[m]|1<<m;l[a]===void 0&&(l[a]=0),l[a]+=(i[m]-1)*v}}t(`${r}: canonseq ${f} states ${h}`),o=l}}var zt={"2x2x2":"c f 0","3x3x3":"c f 0.333333333333333","4x4x4":"c f 0.5 f 0","5x5x5":"c f 0.6 f 0.2","6x6x6":"c f 0.666666666666667 f 0.333333333333333 f 0","7x7x7":"c f 0.714285714285714 f 0.428571428571429 f 0.142857142857143","8x8x8":"c f 0.75 f 0.5 f 0.25 f 0","9x9x9":"c f 0.777777777777778 f 0.555555555555556 f 0.333333333333333 f 0.111111111111111","10x10x10":"c f 0.8 f 0.6 f 0.4 f 0.2 f 0","11x11x11":"c f 0.818181818181818 f 0.636363636363636 f 0.454545454545455 f 0.272727272727273 f 0.0909090909090909","12x12x12":"c f 0.833333333333333 f 0.666666666666667 f 0.5 f 0.333333333333333 f 0.166666666666667 f 0","13x13x13":"c f 0.846153846153846 f 0.692307692307692 f 0.538461538461538 f 0.384615384615385 f 0.230769230769231 f 0.0769230769230769","20x20x20":"c f 0 f .1 f .2 f .3 f .4 f .5 f .6 f .7 f .8 f .9","30x30x30":"c f 0 f .066667 f .133333 f .2 f .266667 f .333333 f .4 f .466667 f .533333 f .6 f .666667 f .733333 f .8 f .866667 f .933333","40x40x40":"c f 0 f .05 f .1 f .15 f .2 f .25 f .3 f .35 f .4 f .45 f .5 f .55 f .6 f .65 f .7 f .75 f .8 f .85 f .9 f .95",skewb:"c v 0","master skewb":"c v 0.275","professor skewb":"c v 0 v 0.38","compy cube":"c v 0.915641442663986",helicopter:"c e 0.707106781186547","curvy copter":"c e 0.83",dino:"c v 0.577350269189626","little chop":"c e 0",pyramorphix:"t e 0",mastermorphix:"t e 0.346184634065199",pyraminx:"t v 0.333333333333333 v 1.66666666666667",tetraminx:"t v 0.333333333333333","master pyraminx":"t v 0 v 1 v 2","master tetraminx":"t v 0 v 1","professor pyraminx":"t v -0.2 v 0.6 v 1.4 v 2.2","professor tetraminx":"t v -0.2 v 0.6 v 1.4","royal pyraminx":"t v -0.333333333333333 v 0.333333333333333 v 1 v 1.66666666666667 v 2.33333333333333","royal tetraminx":"t v -0.333333333333333 v 0.333333333333333 v 1 v 1.66666666666667","emperor pyraminx":"t v -0.428571428571429 v 0.142857142857143 v 0.714285714285714 v 1.28571428571429 v 1.85714285714286 v 2.42857142857143","emperor tetraminx":"t v -0.428571428571429 v 0.142857142857143 v 0.714285714285714 v 1.28571428571429 v 1.85714285714286","Jing pyraminx":"t f 0","master pyramorphix":"t e 0.866025403784437",megaminx:"d f 0.7",gigaminx:"d f 0.64 f 0.82",teraminx:"d f 0.64 f 0.76 f 0.88",petaminx:"d f 0.64 f 0.73 f 0.82 f 0.91",examinx:"d f 0.64 f 0.712 f 0.784 f 0.856 f 0.928",zetaminx:"d f 0.64 f 0.7 f 0.76 f 0.82 f 0.88 f 0.94",yottaminx:"d f 0.64 f 0.6914 f 0.7429 f 0.7943 f 0.8457 f 0.8971 f 0.9486",pentultimate:"d f 0","master pentultimate":"d f 0.1","elite pentultimate":"d f 0 f 0.145905",starminx:"d v 0.937962370425399","starminx 2":"d f 0.23606797749979","pyraminx crystal":"d f 0.447213595499989",chopasaurus:"d v 0","big chop":"d e 0","skewb diamond":"o f 0",FTO:"o f 0.333333333333333","master FTO":"o f 0.5 f 0","Christopher's jewel":"o v 0.577350269189626",octastar:"o e 0","Trajber's octahedron":"o v 0.433012701892219","radio chop":"i f 0",icosamate:"i v 0","icosahedron 2":"i v 0.18759247376021","icosahedron 3":"i v 0.18759247376021 e 0","icosahedron static faces":"i v 0.84","icosahedron moving faces":"i v 0.73","Eitan's star":"i f 0.61803398874989","2x2x2 + dino":"c f 0 v 0.577350269189626","2x2x2 + little chop":"c f 0 e 0","dino + little chop":"c v 0.577350269189626 e 0","2x2x2 + dino + little chop":"c f 0 v 0.577350269189626 e 0","megaminx + chopasaurus":"d f 0.61803398875 v 0","starminx combo":"d f 0.23606797749979 v 0.937962370425399"},it=1e-9;function yt(e){let t=new G(0,0,0,0);for(let s=0;s<e.length;s++)t=t.sum(e[s]);return t.smul(1/e.length)}function ge(e,t,s,i){const n=i[e].intersect3(i[t],i[s]);if(!n)return n;for(let o=0;o<i.length;o++)if(o!==e&&o!==t&&o!==s){const r=i[o].b*n.b+i[o].c*n.c+i[o].d*n.d;if(i[o].a>0&&r>i[o].a||i[o].a<0&&r<i[o].a)return!1}return n}var G=class W{constructor(t,s,i,n){this.a=t,this.b=s,this.c=i,this.d=n}mul(t){return new W(this.a*t.a-this.b*t.b-this.c*t.c-this.d*t.d,this.a*t.b+this.b*t.a+this.c*t.d-this.d*t.c,this.a*t.c-this.b*t.d+this.c*t.a+this.d*t.b,this.a*t.d+this.b*t.c-this.c*t.b+this.d*t.a)}toString(){return`Q[${this.a},${this.b},${this.c},${this.d}]`}dist(t){return Math.hypot(this.a-t.a,this.b-t.b,this.c-t.c,this.d-t.d)}len(){return Math.hypot(this.a,this.b,this.c,this.d)}cross(t){return new W(0,this.c*t.d-this.d*t.c,this.d*t.b-this.b*t.d,this.b*t.c-this.c*t.b)}dot(t){return this.b*t.b+this.c*t.c+this.d*t.d}normalize(){const t=Math.sqrt(this.dot(this));return new W(this.a/t,this.b/t,this.c/t,this.d/t)}makenormal(){return new W(0,this.b,this.c,this.d).normalize()}normalizeplane(){const t=Math.hypot(this.b,this.c,this.d);return new W(this.a/t,this.b/t,this.c/t,this.d/t)}smul(t){return new W(this.a*t,this.b*t,this.c*t,this.d*t)}sum(t){return new W(this.a+t.a,this.b+t.b,this.c+t.c,this.d+t.d)}sub(t){return new W(this.a-t.a,this.b-t.b,this.c-t.c,this.d-t.d)}angle(){return 2*Math.acos(this.a)}invrot(){return new W(this.a,-this.b,-this.c,-this.d)}det3x3(t,s,i,n,o,r,f,l,h){return t*(o*h-r*l)+s*(r*f-n*h)+i*(n*l-o*f)}rotateplane(t){const s=t.mul(new W(0,this.b,this.c,this.d)).mul(t.invrot());return s.a=this.a,s}orthogonal(){const t=Math.abs(this.b),s=Math.abs(this.c),i=Math.abs(this.d);return t<s&&t<i?this.cross(new W(0,1,0,0)).normalize():s<t&&s<i?this.cross(new W(0,0,1,0)).normalize():this.cross(new W(0,0,0,1)).normalize()}pointrotation(t){const s=this.normalize();if(t=t.normalize(),s.sub(t).len()<it)return new W(1,0,0,0);let i=s.sum(t);i.len()<it?i=i.orthogonal():i=i.normalize();const n=s.cross(i);return n.a=s.dot(i),n}unproject(t){return this.sum(t.smul(-this.dot(t)/(this.len()*t.len())))}rotatepoint(t){return t.mul(this).mul(t.invrot())}rotateface(t){return t.map(s=>s.rotatepoint(this))}intersect3(t,s){const i=this.det3x3(this.b,this.c,this.d,t.b,t.c,t.d,s.b,s.c,s.d);return Math.abs(i)<it?!1:new W(0,this.det3x3(this.a,this.c,this.d,t.a,t.c,t.d,s.a,s.c,s.d)/i,this.det3x3(this.b,this.a,this.d,t.b,t.a,t.d,s.b,s.a,s.d)/i,this.det3x3(this.b,this.c,this.a,t.b,t.c,t.a,s.b,s.c,s.a)/i)}side(t){return t>it?1:t<-it?-1:0}cutface(t){const s=this.a;let i=0,n=null;for(let o=0;o<t.length;o++)i|=1<<this.side(t[o].dot(this)-s)+1;if((i&5)===5){n=[];const o=t.map(r=>this.side(r.dot(this)-s));for(let r=-1;r<=1;r+=2){const f=[];for(let l=0;l<t.length;l++){(o[l]===r||o[l]===0)&&f.push(t[l]);const h=(l+1)%t.length;if(o[l]+o[h]===0&&o[l]!==0){const w=t[l].dot(this)-s,d=t[h].dot(this)-s,v=w/(w-d),m=t[l].smul(1-v).sum(t[h].smul(v));f.push(m)}}n.push(f)}}return n}cutfaces(t){const s=[];for(let i=0;i<t.length;i++){const n=t[i],o=this.cutface(n);o?(s.push(o[0]),s.push(o[1])):s.push(n)}return s}faceside(t){const s=this.a;for(let i=0;i<t.length;i++){const n=this.side(t[i].dot(this)-s);if(n!==0)return n}throw new Error("Could not determine side of plane in faceside")}sameplane(t){const s=this.normalize(),i=t.normalize();return s.dist(i)<it||s.dist(i.smul(-1))<it}makecut(t){return new W(t,this.b,this.c,this.d)}},mt=1e-9;function be(){const e=Math.sqrt(.5);return[new G(e,e,0,0),new G(e,0,e,0)]}function we(){return[new G(.5,.5,.5,.5),new G(.5,.5,.5,-.5)]}function ve(){const e=2*Math.PI/10;let t=.5+.3*Math.sqrt(5),s=.5+.1*Math.sqrt(5);const i=Math.sqrt(t*t+s*s);return t/=i,s/=i,[new G(Math.cos(e),t*Math.sin(e),s*Math.sin(e),0),new G(.5,.5,.5,.5)]}function ye(){let e=.16666666666666666+Math.sqrt(5)/6,t=2/3+Math.sqrt(5)/3;const s=Math.sqrt(e*e+t*t);e/=s,t/=s;const i=2*Math.PI/6;return[new G(Math.cos(i),e*Math.sin(i),t*Math.sin(i),0),new G(Math.cos(i),-e*Math.sin(i),t*Math.sin(i),0)]}function xe(){const e=Math.sqrt(.5);return[new G(.5,.5,.5,.5),new G(e,0,0,e)]}function Le(e){const t=[new G(1,0,0,0)];for(let s=0;s<t.length;s++)for(let i=0;i<e.length;i++){const n=e[i].mul(t[s]),o=n.smul(-1);let r=!1;for(let f=0;f<t.length;f++)if(n.dist(t[f])<mt||o.dist(t[f])<mt){r=!0;break}r||t.push(n)}return t}function $t(e,t){const s=[],i=[];for(let n=0;n<t.length;n++){const o=e.rotateplane(t[n]);let r=!1;for(let f=0;f<s.length;f++)if(o.dist(s[f])<mt){r=!0;break}r||(s.push(o),i.push(t[n]))}return i}function It(e){const t=[];for(let s=1;s<e.length;s++)for(let i=s+1;i<e.length;i++){const n=ge(0,s,i,e);if(n){let o=!1;for(let r=0;r<t.length;r++)if(n.dist(t[r])<mt){o=!0;break}o||t.push(n)}}for(;;){let s=!1;for(let i=0;i<t.length;i++){const n=(i+1)%t.length;if(e[0].dot(t[i].cross(t[n]))<0){const o=t[i];t[i]=t[n],t[n]=o,s=!0}}if(!s)break}return t}var Fe=class{constructor(){b(this,"mult");this.mult=[]}multiply(e){for(let t=2;t*t<=e;t++)for(;e%t===0;)this.mult[t]!==void 0?this.mult[t]++:this.mult[t]=1,e/=t;e>1&&(this.mult[e]!==void 0?this.mult[e]++:this.mult[e]=1)}toString(){let e="";for(let t=0;t<this.mult.length;t++)this.mult[t]!==void 0&&(e!==""&&(e+="*"),e+=t,this.mult[t]>1&&(e+=`^${this.mult[t]}`));return e}};function Be(e,t){const s=e[0].p.length,i=fe(s);let n=[],o=[],r=[],f=[],l=[];function h(m){for(let a=m.p.length-1;a>=0;a--){const u=m.p[a];if(u!==a){if(!n[a][u])return!1;m=m.mul(o[a][u])}}return!0}function w(m,a,u){f[m].push(a),l[m].push(u);for(let y=0;y<n[m].length;y++)n[m][y]&&d(m,n[m][y].mul(a),u+r[m][y])}function d(m,a,u){const y=a.p[m];if(!n[m][y]){n[m][y]=a,o[m][y]=a.inv(),r[m][y]=u;for(let g=0;g<f[m].length;g++)d(m,a.mul(f[m][g]),u+l[m][g]);return}const L=a.mul(o[m][y]);h(L)||w(m-1,L,u+r[m][y])}function v(){n=[],o=[],f=[],r=[],l=[];for(let u=0;u<s;u++)n.push([]),o.push([]),r.push([]),f.push([]),l.push([]),n[u][u]=i,o[u][u]=i,r[u][u]=0;let m=0,a=BigInt(1);for(let u=0;u<e.length;u++){w(s-1,e[u],1),a=BigInt(1);let y=0,L=0;const g=new Fe;for(let M=0;M<s;M++){let R=0,S=0;for(let I=0;I<s;I++)n[M][I]&&(R++,S+=r[M][I],M!==I&&m++);y+=f[M].length,a*=BigInt(R),R>1&&g.multiply(R);const Z=S/R;L+=Z}t(`${u}: sz ${a} T ${y} sol ${L} none ${m} mults ${g.toString()}`)}return a}return v()}var Ft=class Bt{constructor(t){b(this,"coords");b(this,"length");this.coords=new Array(t.length*3);for(let s=0;s<t.length;s++)this.coords[3*s]=t[s].b,this.coords[3*s+1]=t[s].c,this.coords[3*s+2]=t[s].d;this.length=t.length}get(t){return new G(0,this.coords[3*t],this.coords[3*t+1],this.coords[3*t+2])}centermass(){let t=0,s=0,i=0;for(let n=0;n<this.length;n++)t+=this.coords[3*n],s+=this.coords[3*n+1],i+=this.coords[3*n+2];return new G(0,t/this.length,s/this.length,i/this.length)}rotate(t){const s=[];for(let i=0;i<this.length;i++)s.push(this.get(i).rotatepoint(t));return new Bt(s)}rotateforward(){const t=[];for(let s=1;s<this.length;s++)t.push(this.get(s));return t.push(this.get(0)),new Bt(t)}},Me=class Mt{constructor(t,s,i){this.face=t,this.left=s,this.right=i}split(t){var i,n;const s=t.cutface(this.face);return s!==null&&(this.left===void 0?(this.left=new Mt(s[0]),this.right=new Mt(s[1])):(this.left=(i=this.left)==null?void 0:i.split(t),this.right=(n=this.right)==null?void 0:n.split(t))),this}collect(t,s){var i,n,o,r;return this.left===void 0?t.push(new Ft(this.face)):s?((i=this.left)==null||i.collect(t,!1),(n=this.right)==null||n.collect(t,!0)):((o=this.right)==null||o.collect(t,!1),(r=this.left)==null||r.collect(t,!0)),t}};function ze(e,t){const s=[];for(const i of e)for(const n of t)s.push(n.rotate(i));return s}var K=1e-9,Re="PuzzleGeometry 0.1 Copyright 2018 Tomas Rokicki.";function De(){return{4:[["F","D","L","R"]],6:[["F","D","L","U","R"],["R","F","","B",""]],8:[["F","D","L","R"],["D","F","BR",""],["BR","D","","BB"],["BB","BR","U","BL"]],12:[["U","F","","","",""],["F","U","R","C","A","L"],["R","F","","","E",""],["E","R","","BF","",""],["BF","E","BR","BL","I","D"]],20:[["R","C","F","E"],["F","R","L","U"],["L","F","A",""],["E","R","G","I"],["I","E","S","H"],["S","I","J","B"],["B","S","K","D"],["K","B","M","O"],["O","K","P","N"],["P","O","Q",""]]}}function ke(){return{4:{F:"#44ee00",D:"#f4f400",L:"#ff0000",R:"#2266ff"},6:{U:"#ffffff",F:"#44ee00",R:"#ff0000",D:"#f4f400",B:"#2266ff",L:"#ff8000"},8:{U:"#ffffff",F:"#ff0000",R:"#44ee00",D:"#f4f400",BB:"#2266ff",L:"#8800dd",BL:"#ff8000",BR:"#aaaaaa"},12:{U:"#ffffff",F:"#008800",R:"#ff0000",C:"#e8d0a0",A:"#3399ff",L:"#8800dd",E:"#ff66cc",BF:"#99ff00",BR:"#0000ff",BL:"#f4f400",I:"#ff8000",D:"#aaaaaa"},20:{R:"#db69f0",C:"#178fde",F:"#23238b",E:"#9cc726",L:"#2c212d",U:"#177fa7",A:"#e0de7f",G:"#2b57c0",I:"#41126b",S:"#4b8c28",H:"#7c098d",J:"#7fe7b4",B:"#85fb74",K:"#3f4bc3",D:"#0ff555",M:"#f1c2c8",O:"#58d340",P:"#c514f2",N:"#14494e",Q:"#8b1be1"}}}var Ee={4:{v:["DFR","DLF","DRL","FLR"],e:["FR","LF","DF","DL","RD","RL"],c:["DF","FD","RL","LR"]},6:{v:["URF","UBR","ULB","UFL","DFR","DRB","DBL","DLF"],e:["UF","UR","UB","UL","DF","DR","DB","DL","FR","FL","BR","BL"],c:["UB","LU","FU","RU","BU","DF"]},8:{v:["UBBBRR","URFL","ULBLBB","DBRBBBL","DBLLF","DFRBR"],e:["UL","UBB","UR","BRD","BLD","FD","BRR","FR","FL","BLL","BLBB","BRBB"],c:["BBU","LU","RU","BRD","FD","BLD","DF","UBB"]},12:{v:["URF","UFL","ULBL","UBLBR","UBRR","DEBF","DBFI","DIA","DAC","DCE","LAI","ALF","FCA","CFR","REC","ERBR","BRBFE","BFBRBL","BLIBF","IBLL"],e:["UF","UR","UBR","UBL","UL","ER","EBR","EBF","ED","EC","IBF","IBL","IL","IA","ID","AC","CF","FA","BFBR","BRBL","BLBF","CD","AD","AL","FL","FR","CR","BFD","BRR","BLL"],c:["UF","FU","DBF","BFD","AD","CD","BRU","BLU","LA","RA","EBR","IBL"]},20:{v:["FLPQU","FUGER","FRCAL","HCREI","ISBDH","JSIEG","BSJMK","MQPOK","ONDBK","NOPLA","UQMJG","DNACH"],e:["FU","FL","FR","EG","ER","EI","SJ","SI","SB","KM","KB","KO","PQ","PO","PL","UG","JG","MQ","UQ","HC","HD","ND","NA","JM","CA","AL","CR","HI","DB","NO"],c:["FU","UF","GE","EG","JS","SJ","MK","KM","QP","PQ","LA","AL","RC","CR","IH","HI","BD","DB","ON","NO"]}};function je(){return{4:[["FLR",[0,1,0]],["F",[0,0,1]]],6:[["U",[0,1,0]],["F",[0,0,1]]],8:[["U",[0,1,0]],["F",[0,0,1]]],12:[["U",[0,1,0]],["F",[0,0,1]]],20:[["GUQMJ",[0,1,0]],["F",[0,0,1]]]}}function lt(e,t){for(let s=0;s<e.length;s++)if(e[s][0].dist(t)<K)return s;throw new Error("Element not found")}function Ne(){return zt}function Ae(e){return zt[e]}var Ge=["c","t","o","d","i"],Ke=["f","v","e"];function Wt(e){const t=e.split(/ /).filter(Boolean);if(t.length%2===0)return null;const s=t[0];if(s!=="o"&&s!=="c"&&s!=="i"&&s!=="d"&&s!=="t")return null;const i=[];for(let n=1;n<t.length;n+=2){if(t[n]!=="f"&&t[n]!=="v"&&t[n]!=="e")return null;i.push({cutType:t[n],distance:parseFloat(t[n+1])})}return{shape:s,cuts:i}}function Ce(e,t={}){const s=Wt(e);if(s===null)throw new Error("Could not parse the puzzle description");const i=new Oe(s,Object.assign({},{allMoves:!0},t));return i.allstickers(),i.genperms(),i}function Qe(e,t){return Ce(zt[e],t)}function Ue(e,t,s){let i=!1;s-t[1]<t[0]&&(e=[e[2],e[3],e[0],e[1]],t=[s-t[1],s-t[0]],i=!0);let n=e[0],o="";if(t[0]===0&&t[1]===s)n=`${n}v`;else if(t[0]===t[1])t[1]>0&&(o=String(t[1]+1));else if(t[0]===0)n=n.toLowerCase(),t[1]>1&&(o=String(t[1]+1));else throw new Error(`We only support slice and outer block moves right now. ${t}`);return[o+n,i]}function Pe(e,t){const s=[];let i=0;for(;i<e.length;){i>0&&i<e.length&&e[i]==="_"&&i++;let n="";for(const o of t)e.substr(i).startsWith(o[1])&&o[1].length>n.length&&(n=o[1]);if(n!=="")s.push(n),i+=n.length;else throw new Error(`Could not split ${e} into face names.`)}return s}function ft(e,t){return[e.b/t,-e.c/t,e.d/t]}function xt(e,t){const s=[],i=e.length;for(let n=0;n<i;n++){const o=ft(e.get(i-n-1),t);s[3*n]=o[0],s[3*n+1]=o[1],s[3*n+2]=o[2]}return s}var Oe=class{constructor(e,t){b(this,"rotations");b(this,"baseplanerot");b(this,"baseplanes");b(this,"facenames");b(this,"faceplanes");b(this,"edgenames");b(this,"vertexnames");b(this,"geonormals");b(this,"moveplanes");b(this,"moveplanes2");b(this,"moveplanesets");b(this,"moveplanenormals");b(this,"movesetorders");b(this,"movesetgeos");b(this,"basefaces");b(this,"faces");b(this,"facecentermass");b(this,"baseFaceCount");b(this,"stickersperface");b(this,"shortedge");b(this,"markedface");b(this,"cubies");b(this,"vertexdistance");b(this,"edgedistance");b(this,"facetocubie");b(this,"facetoord");b(this,"moverotations");b(this,"facelisthash");b(this,"cubiesetnames");b(this,"cubieords");b(this,"cubiesetnums");b(this,"cubieordnums");b(this,"orbitoris");b(this,"cubievaluemap");b(this,"cubiesetcubies");b(this,"cmovesbyslice",[]);b(this,"parsedmovelist");b(this,"duplicatedFaces",[]);b(this,"duplicatedCubies",[]);b(this,"fixedCubie",-1);b(this,"net",[]);b(this,"colors",[]);b(this,"swizzler");b(this,"notationMapper",new St);b(this,"addNotationMapper","");b(this,"setReidOrder",!1);b(this,"options");this.puzzleDescription=e,this.options=new ce(t),this.options.verbosity>0&&console.log(this.header("# ")),this.create(e)}create(e){const{shape:t,cuts:s}=e;this.moveplanes=[],this.moveplanes2=[],this.faces=[],this.cubies=[];let i=null;switch(t){case"c":{i=be();break}case"o":{i=xe();break}case"i":{i=ye();break}case"t":{i=we();break}case"d":{i=ve();break}default:throw new Error(`Bad shape argument: ${t}`)}this.rotations=Le(i),this.options.verbosity&&console.log(`# Rotations: ${this.rotations.length}`);const n=i[0];this.baseplanerot=$t(n,this.rotations);const o=this.baseplanerot.map(c=>n.rotateplane(c));this.baseplanes=o,this.baseFaceCount=o.length;const r=De()[o.length];this.net=r,this.colors=ke()[o.length],this.options.verbosity>0&&console.log(`# Base planes: ${o.length}`);const f=It(o),l=new G(0,0,0,0);this.options.verbosity>0&&console.log(`# Face vertices: ${f.length}`);const h=o[0].makenormal(),w=f[0].sum(f[1]).makenormal(),d=f[0].makenormal(),v=new G(1,h.b,h.c,h.d);this.options.verbosity>0&&console.log(`# Boundary is ${v}`);const a=$t(v,this.rotations).map(c=>v.rotateplane(c)),u=It(a);this.edgedistance=u[0].sum(u[1]).smul(.5).dist(l),this.vertexdistance=u[0].dist(l);const y=[],L=[];let g=!1,M=!1,R=!1;for(const c of s){let x=null,C=0;switch(c.cutType){case"f":{x=h,C=1,g=!0;break}case"v":{x=d,C=this.vertexdistance,R=!0;break}case"e":{x=w,C=this.edgedistance,M=!0;break}default:throw new Error(`Bad cut argument: ${c.cutType}`)}y.push(x.makecut(c.distance)),L.push(c.distance<C)}this.options.addRotations&&(g||y.push(h.makecut(10)),R||y.push(d.makecut(10)),M||y.push(w.makecut(10))),this.basefaces=[];for(const c of this.baseplanerot){const x=c.rotateface(u);this.basefaces.push(new Ft(x))}const S=[],Z=[],I=[],p=[],B=u.length;function U(c,x,C){for(const D of c)if(D[0].dist(x)<K){D.push(C);return}c.push([x,C])}for(let c=0;c<this.baseplanerot.length;c++){const x=this.baseplanerot[c].rotateface(u);for(let C=0;C<x.length;C++){const D=(C+1)%x.length,O=x[C].sum(x[D]).smul(.5);U(p,O,c)}}const E=[];for(let c=0;c<this.baseplanerot.length;c++){const x=this.baseplanerot[c].rotateface(u),C=[];for(let D=0;D<x.length;D++){const O=(D+1)%x.length,N=x[D].sum(x[O]).smul(.5),H=p[lt(p,N)];if(c===H[1])C.push(H[2]);else if(c===H[2])C.push(H[1]);else throw new Error("Could not find edge")}E.push(C)}const F={},z=[];z.push(r[0][0]),F[r[0][0]]=0,z[E[0][0]]=r[0][1],F[r[0][1]]=E[0][0];for(const c of r){const x=c[0],C=F[x];if(C===void 0)throw new Error("Bad edge description; first edge not connected");let D=-1;for(let O=0;O<E[C].length;O++){const N=z[E[C][O]];if(N!==void 0&&N===c[1]){D=O;break}}if(D<0)throw new Error("First element of a net not known");for(let O=2;O<c.length;O++){if(c[O]==="")continue;const N=E[C][(O+D-1)%B],H=z[N];if(H!==void 0&&H!==c[O])throw new Error("Face mismatch in net");z[N]=c[O],F[c[O]]=N}}for(let c=0;c<this.baseplanerot.length;c++){const x=this.baseplanerot[c].rotateface(u),C=v.rotateplane(this.baseplanerot[c]),D=z[c];S.push([x,D]),Z.push([C,D])}for(let c=0;c<this.baseplanerot.length;c++){const x=this.baseplanerot[c].rotateface(u),C=z[c];for(let D=0;D<x.length;D++){const O=(D+1)%x.length,N=x[D].sum(x[O]).smul(.5),H=(D+2)%x.length,Jt=x[O].sum(x[H]).smul(.5),Vt=lt(p,N),Yt=lt(p,Jt);U(I,x[O],[C,Yt,Vt])}}this.swizzler=new pt(S.map(c=>c[1]));const j=this.swizzler.prefixFree?"":"_",T=Ee[this.baseFaceCount],P=[];for(let c=0;c<this.baseFaceCount;c++)P[1<<c]=c;{const c=T.v;for(const x of c){const C=this.swizzler.splitByFaceNames(x);let D=0;for(const O of C)D|=1<<O;P[D]=C[0]}}{const c=T.e;for(const x of c){const C=this.swizzler.splitByFaceNames(x);let D=0;for(const O of C)D|=1<<O;P[D]=C[0]}}{const c=T.c;for(const x of c){const C=this.swizzler.splitByFaceNames(x),D=1<<C[0]|1<<this.baseFaceCount;P[D]=C[1]}}for(let c=0;c<p.length;c++){if(p[c].length!==3)throw new Error(`Bad length in edge names ${p[c]}`);const x=p[c][1],C=p[c][2];let D=z[x];const O=z[C],N=1<<x|1<<C;P[N]===x?D=D+j+O:D=O+j+D,p[c]=[p[c][0],D]}for(let c=0;c<I.length;c++){let x=0;if(I[c].length<4)throw new Error("Bad length in vertex names");for(let N=1;N<I[c].length;N++)x|=1<<F[I[c][N][0]];const C=P[x];let D=-1;for(let N=1;N<I[c].length;N++)C===F[I[c][N][0]]&&(D=N);if(D<0)throw new Error("Internal error; couldn't find face name when fixing corners");let O="";for(let N=1;N<I[c].length;N++){N===1?O=I[c][D][0]:O=O+j+I[c][D][0];for(let H=1;H<I[c].length;H++)if(I[c][D][1]===I[c][H][2]){D=H;break}}I[c]=[I[c][0],O]}this.markedface=P,this.options.verbosity>1&&(console.log(`# Face names: ${S.map(c=>c[1]).join(" ")}`),console.log(`# Edge names: ${p.map(c=>c[1]).join(" ")}`),console.log(`# Vertex names: ${I.map(c=>c[1]).join(" ")}`));const A=[];for(const c of Z)A.push([c[0].makenormal(),c[1],"f"]);for(const c of p)A.push([c[0].makenormal(),c[1],"e"]);for(const c of I)A.push([c[0].makenormal(),c[1],"v"]);this.facenames=S,this.faceplanes=Z,this.edgenames=p,this.vertexnames=I,this.geonormals=A;const X=A.map(c=>c[1]);this.swizzler.setGripNames(X),this.options.verbosity>0&&console.log(`# Distances: face 1 edge ${this.edgedistance} vertex ${this.vertexdistance}`);for(let c=0;c<y.length;c++)for(const x of this.rotations){const C=y[c].rotateplane(x);let D=!1;for(const O of this.moveplanes)if(C.sameplane(O)){D=!0;break}D||(this.moveplanes.push(C),L[c]&&this.moveplanes2.push(C))}let J=new Me(u);const q=this.moveplanes2.slice();let _=31;for(let c=0;c<q.length;c++){const x=c+Math.floor((q.length-c)*(_/65536));J=J.split(q[x]),q[x]=q[c],_=(_*1657+101)%65536}const V=J.collect([],!0);this.faces=V,this.options.verbosity>0&&console.log(`# Faces is now ${V.length}`),this.stickersperface=V.length;const rt=[],tt=yt(u);for(const c of this.rotations){const x=c.rotateface(u);tt.dist(yt(x))<K&&rt.push(c)}const et=new Array(V.length),Q=[];for(let c=0;c<V.length;c++){const x=V[c].centermass();Q.push([tt.dist(x),x,c])}Q.sort((c,x)=>c[0]-x[0]);for(let c=0;c<V.length;c++){const x=Q[c][2];if(!et[x]){et[x]=!0;for(const C of rt){const D=V[x].rotate(C),O=D.centermass();for(let N=c+1;N<V.length&&!(Q[N][0]-Q[c][0]>K);N++){const H=Q[N][2];if(!et[H]&&O.dist(Q[N][1])<K){et[H]=!0,V[H]=D;break}}}}}this.shortedge=1e99;for(const c of V)for(let x=0;x<c.length;x++){const C=(x+1)%c.length,D=c.get(x).dist(c.get(C));D<this.shortedge&&(this.shortedge=D)}this.options.verbosity>0&&console.log(`# Short edge is ${this.shortedge}`),t==="c"&&g&&!M&&!R&&(this.addNotationMapper="NxNxNCubeMapper",this.setReidOrder=!0),t==="c"&&R&&!g&&!M&&(this.addNotationMapper="SkewbMapper"),t==="t"&&(R||g)&&!M&&(this.addNotationMapper="PyraminxOrTetraminxMapper"),t==="o"&&g&&(this.notationMapper=new Rt(this.swizzler,new pt(["F","D","L","BL","R","U","BR","B"])),M||R||(this.addNotationMapper="FTOMapper")),t==="d"&&g&&(this.addNotationMapper="MegaminxMapper",this.notationMapper=new Rt(this.swizzler,new pt(["U","F","L","BL","BR","R","FR","FL","DL","B","DR","D"])))}keyface(e){return this.keyface2(e.centermass())}keyface2(e){let t="";const s=String.fromCharCode;for(const i of this.moveplanesets)if(i.length>0){const n=e.dot(i[0]);let o=0,r=1;for(;r*2<=i.length;)r*=2;for(;r>0;r>>=1)o+r<=i.length&&n>i[o+r-1].a&&(o+=r);if(o<47)t=t+s(33+o);else if(o<47+47*47)t=t+s(80+Math.floor(o/47)-1)+s(33+o%47);else if(o<47+47*47+47*47*47)t=t+s(80+Math.floor((o-47)/(47*47)-1))+s(80+Math.floor((o-47)/47)%47)+s(33+o%47);else throw Error("Too many slices for cubie encoding")}return t}keyface3(e){const t=e.centermass(),s=[];for(const i of this.moveplanesets)if(i.length>0){const n=t.dot(i[0]);let o=0,r=1;for(;r*2<=i.length;)r*=2;for(;r>0;r>>=1)o+r<=i.length&&n>i[o+r-1].a&&(o+=r);s.push(o)}return s}findface(e){const t=this.keyface2(e),s=this.facelisthash.get(t);if(s.length===1)return s[0];for(let i=0;i+1<s.length;i++){const n=this.facelisthash.get(t)[i];if(Math.abs(e.dist(this.facecentermass[n]))<K)return n}return s[s.length-1]}project2d(e,t,s){const i=this.facenames[e][0],n=(t+1)%i.length,o=this.baseplanes[e];let r=i[n].sub(i[t]);const f=r.len();r=r.normalize();const l=r.cross(o).normalize();let h=s[1].sub(s[0]);const w=h.len()/f;h=h.normalize();const d=h.b,v=h.c,m=r.smul(d).sub(l.smul(v)).smul(w),a=l.smul(d).sum(r.smul(v)).smul(w),u=new G(0,s[0].b-m.dot(i[t]),s[0].c-a.dot(i[t]),0);return[m,a,u]}allstickers(){this.faces=ze(this.baseplanerot,this.faces),this.options.verbosity>0&&console.log(`# Total stickers is now ${this.faces.length}`),this.facecentermass=new Array(this.faces.length);for(let p=0;p<this.faces.length;p++)this.facecentermass[p]=this.faces[p].centermass();const e=[],t=[];for(const p of this.moveplanes){const B=p.makenormal();let U=!1;for(const E of t)B.sameplane(E.makenormal())&&(U=!0);U||(t.push(B),e.push([]))}for(const p of this.moveplanes2){const B=p.makenormal();for(let U=0;U<t.length;U++)if(B.sameplane(t[U])){e[U].push(p);break}}for(let p=0;p<e.length;p++){const B=e[p].map(E=>E.normalizeplane()),U=t[p];for(let E=0;E<B.length;E++)B[E].makenormal().dist(U)>K&&(B[E]=B[E].smul(-1));B.sort((E,F)=>E.a-F.a),e[p]=B}this.moveplanesets=e,this.moveplanenormals=t;const s=e.map(p=>p.length);this.options.verbosity>0&&console.log(`# Move plane sets: ${s}`);const i=[];for(let p=0;p<e.length;p++)i.push([]);for(const p of this.rotations){if(Math.abs(Math.abs(p.a)-1)<K)continue;const B=p.makenormal();for(let U=0;U<e.length;U++)if(B.sameplane(t[U])){i[U].push(p);break}}this.moverotations=i;for(let p=0;p<i.length;p++){const B=i[p],U=B[0].makenormal();for(let E=0;E<B.length;E++)U.dist(B[E].makenormal())>K&&(B[E]=B[E].smul(-1));B.sort((E,F)=>E.angle()-F.angle()),i[p][0].dot(t[p])<0&&B.reverse()}const n=i.map(p=>1+p.length);this.movesetorders=n;const o=[];let r="?";for(let p=0;p<e.length;p++){const B=t[p];let U=null,E=null;for(const F of this.geonormals){const z=B.dot(F[0]);Math.abs(z-1)<K?(E=[F[1],F[2]],r=F[2]):Math.abs(z+1)<K&&(U=[F[1],F[2]],r=F[2])}if(E===null||U===null)throw new Error("Saw positive or negative sides as null");o.push([E[0],E[1],U[0],U[1],1+e[p].length]),this.addNotationMapper==="NxNxNCubeMapper"&&r==="f"&&(this.notationMapper=new ee(1+e[p].length),this.addNotationMapper=""),this.addNotationMapper==="SkewbMapper"&&e[0].length===1&&(this.notationMapper=new le(this.swizzler),this.addNotationMapper=""),this.addNotationMapper==="PyraminxOrTetraminxMapper"&&(e[0].length===2&&e[0][0].a===.333333333333333&&e[0][1].a===1.66666666666667?(this.notationMapper=new Tt(this.swizzler),this.addNotationMapper=""):(this.notationMapper=new ne(this.swizzler),this.addNotationMapper="")),this.addNotationMapper==="MegaminxMapper"&&r==="f"&&(1+e[p].length===3&&(this.notationMapper=new te(this.notationMapper)),this.addNotationMapper=""),this.addNotationMapper==="FTOMapper"&&r==="f"&&(1+e[p].length===3&&(this.notationMapper=new _t(this.notationMapper,this.swizzler)),this.addNotationMapper="")}this.movesetgeos=o;const f=new Map,l=this.faces;for(let p=0;p<l.length;p++){const B=l[p],U=this.keyface(B);if(!f.get(U))f.set(U,[p]);else{const E=f.get(U);if(E.push(p),E.length===this.baseFaceCount){this.options.verbosity>0&&console.log("# Splitting core.");for(let F=0;F<E.length;F++){const z=`${U} ${F}`;f.set(z,[E[F]])}}}}this.facelisthash=f,this.options.verbosity>0&&console.log(`# Cubies: ${f.size}`);const h=[],w=[],d=[];for(const p of f.values())if(p.length!==this.baseFaceCount){if(p.length>1){const B=p.map(j=>l[j].centermass()),U=yt(B);for(let j=0;p.length>2;j++){let T=!1;for(let P=0;P<p.length;P++){const A=(P+1)%p.length;if(U.dot(B[P].cross(B[A]))<0){const X=B[P];B[P]=B[A],B[A]=X;const J=p[P];p[P]=p[A],p[A]=J,T=!0}}if(!T)break;if(j>1e3)throw new Error("Bad epsilon math; too close to border")}let E=0;for(const j of p)E|=1<<Math.floor(j/this.stickersperface);const F=this.markedface[E];let z=-1;for(let j=0;j<p.length;j++)Math.floor(p[j]/this.stickersperface)===F&&(z=j);if(z<0)throw new Error("Could not find marked face in list");if(z!==0){const j=p.slice();for(let T=0;T<p.length;T++)p[T]=j[(z+T)%p.length]}}for(let B=0;B<p.length;B++){const U=p[B];w[U]=h.length,d[U]=B}h.push(p)}this.cubies=h,this.facetocubie=w,this.facetoord=d;const v=["?","CENTERS","EDGES","CORNERS","C4RNER","C5RNER"],m=[],a=[0,0,0,0,0,0],u=[],y=[];let L=0;const g=[],M=[],R=[],S=[],Z=p=>h[p].map(B=>this.getfaceindex(B)).join(" "),I=[];for(let p=0;p<h.length;p++){const B=h[p];if(B.length===0||y[p])continue;const U={};let E=0;R.push(0),I.push([]);const F=B.length,z=a[F]++;let j=v[F];(j===void 0||F===this.baseFaceCount)&&(j="CORE"),j=j+(z===0?"":z+1),m[L]=j,u[L]=F;const T=[p];let P=0;for(y[p]=!0;P<T.length;){const A=T[P++],X=Z(A);if((B.length>1||U[X]===void 0)&&(U[X]=E++),S[A]=U[X],g[A]=L,I[L].push(A),M[A]=R[L]++,T.length<this.rotations.length){const J=this.facecentermass[h[A][0]];for(const q of i){const _=this.facetocubie[this.findface(J.rotatepoint(q[0]))];y[_]||(T.push(_),y[_]=!0)}}}L++}if(this.setReidOrder&&4<=this.stickersperface&&this.stickersperface<=9){const p=[["UF","UR","UB","UL","DF","DR","DB","DL","FR","FL","BR","BL"],["UFR","URB","UBL","ULF","DRF","DFL","DLB","DBR"],["U","L","F","R","B","D"]],B={};for(const U of p)for(let E=0;E<U.length;E++){let F=0;for(let z=0;z<U[E].length;z++)F|=1<<U[E].charCodeAt(z)-65;B[F]=E}for(const U of I)for(const E of U){let F=0;for(const z of h[E])F|=1<<this.facenames[this.getfaceindex(z)][1].charCodeAt(0)-65;M[E]=B[F]}}if(this.cubiesetnums=g,this.cubieordnums=M,this.cubiesetnames=m,this.cubieords=R,this.orbitoris=u,this.cubievaluemap=S,this.cubiesetcubies=I,this.options.fixedPieceType!==null){for(let p=0;p<h.length;p++)if(this.options.fixedPieceType==="v"&&h[p].length>2||this.options.fixedPieceType==="e"&&h[p].length===2||this.options.fixedPieceType==="f"&&h[p].length===1){this.fixedCubie=p;break}if(this.fixedCubie<0)throw new Error(`Could not find a cubie of type ${this.options.fixedPieceType} to fix.`)}this.options.verbosity>0&&console.log(`# Cubie orbit sizes ${R}`)}unswizzle(e){const t=this.notationMapper.notationToInternal(e);return t===null?null:t.modified({family:this.swizzler.unswizzle(t.family)})}stringToBlockMove(e){const t=/^(([0-9]+)-)?([0-9]+)?([^0-9]+)([0-9]+'?)?$/,s=e.match(t);if(s===null)throw new Error(`Bad move passed ${e}`);const i=s[4];let n,o;if(s[2]!==void 0){if(s[3]===void 0)throw new Error("Missing second number in range");n=parseInt(s[2],10)}s[3]!==void 0&&(o=parseInt(s[3],10));let r="1",f=1;return s[5]!==void 0&&(r=s[5],r[0]==="'"&&(r=`-${r.substring(1)}`),f=parseInt(r,10)),new k(new $(i,o,n),f)}parseMove(e){const t=this.notationMapper.notationToInternal(e);if(t===null)throw new Error(`Bad move ${e.family}`);e=t;let s=e.family,i=!1;if(s.endsWith("v")&&s[0]<="Z"){if(e.innerLayer!==void 0||e.outerLayer!==void 0)throw new Error("Cannot use a prefix with full cube rotations");s=s.slice(0,-1),i=!0}s.endsWith("w")&&s[0]<="Z"&&(s=s.slice(0,-1).toLowerCase());let n,o=-1;const r=this.swizzler.unswizzle(s);let f=!1;for(let w=0;w<this.movesetgeos.length;w++){const d=this.movesetgeos[w];r===d[0]&&(f=!0,n=d,o=w),r===d[2]&&(f=!1,n=d,o=w)}let l=1,h=1;if(s.toUpperCase()!==s&&(h=2),n===void 0)throw new Error(`Bad grip in move ${e.family}`);if(e.outerLayer!==void 0&&(l=e.outerLayer),e.innerLayer!==void 0&&(e.outerLayer===void 0?(h=e.innerLayer,s<="Z"?l=h:l=1):h=e.innerLayer),l--,h--,i&&(l=0,h=this.moveplanesets[o].length),l<0||l>this.moveplanesets[o].length||h<0||h>this.moveplanesets[o].length)throw new Error(`Bad slice spec ${l} ${h} vs ${this.moveplanesets[o].length}`);if(l===0&&h===this.moveplanesets[o].length&&!i)throw new Error("! full puzzle rotations must be specified with v suffix.");return[void 0,o,l,h,f,e.amount]}parsemove(e){const t=this.parseMove(this.stringToBlockMove(e));return t[0]=e,t}genperms(){if(this.cmovesbyslice.length>0)return;const e=[];if(this.options.orientCenters){for(let t=0;t<this.cubies.length;t++)if(this.cubies[t].length===1){const s=this.cubies[t][0],i=this.getfaceindex(s),n=this.basefaces[i].centermass();if(n.dist(this.facecentermass[s])<K){const o=1<<i|1<<this.baseFaceCount,r=this.markedface[o],f=this.baseplanes[r].makenormal();let l=-1,h=-1;for(let v=0;v<this.faces[s].length;v++){const m=this.faces[s].get(v),a=f.dot(m.sub(n));a>l&&(l=a,h=v)}const w=(h+1)%this.faces[s].length;if(Math.abs(f.dot(this.faces[s].get(w).sub(n))-l)<K&&(h=w),h!==0){const v=[];for(let m=0;m<this.faces[s].length;m++)v.push(this.faces[s].get((m+h)%this.faces[s].length));this.faces[s]=new Ft(v)}const d=this.basefaces[i].length;for(let v=1;v<d;v++)this.cubies[t].push(this.cubies[t][v-1]);this.duplicatedFaces[s]=d,this.duplicatedCubies[t]=d,this.orbitoris[this.cubiesetnums[t]]=d}}}for(let t=0;t<this.moveplanesets.length;t++){const s=this.moveplanesets[t],i=[],n=[s.length+1,0];let o=1;for(;o*2<=s.length;)o*=2;for(let l=0;l<this.faces.length;l++){let h=0;if(s.length>0){const w=this.facecentermass[l].dot(s[0]);for(let d=o;d>0;d>>=1)h+d<=s.length&&w>s[h+d-1].a&&(h+=d);h=s.length-h}for(i.push(h);n.length<=h;)n.push(0);n[h]++}const r=new Array(n.length);for(let l=0;l<n.length;l++)r[l]=[];const f=[];for(let l=0;l<this.faces.length;l++){if(i[l]<0)continue;const h=[this.facetocubie[l],this.facetoord[l]];let w=this.facecentermass[l];const d=w;let v=l;const m=i[v];for(;;){i[v]=-1;const a=w.rotatepoint(this.moverotations[t][0]);if(a.dist(d)<K)break;v=this.findface(a),h.push(this.facetocubie[v],this.facetoord[v]),w=a}if(h.length>2&&this.options.orientCenters&&(this.cubies[h[0]].length===1||this.duplicatedCubies[h[0]]>1)&&this.facecentermass[l].dist(this.basefaces[this.getfaceindex(l)].centermass())<K){let a=this.faces[this.cubies[h[0]][0]];for(let u=0;u<h.length;u+=2){const y=this.faces[this.cubies[h[u]][0]];let L=-1;for(let g=0;g<a.length;g++)if(y.get(g).dist(a.get(0))<K){L=g;break}if(L<0)throw new Error("Couldn't find rotation of center faces; ignoring for now.");h[u+1]=L,a=a.rotate(this.moverotations[t][0])}}if(h.length===2&&this.options.orientCenters)for(let a=1;a<this.movesetorders[t];a++)m===0?h.push(h[0],a):h.push(h[0],(this.movesetorders[t]-a)%this.movesetorders[t]);if(h.length>2&&!f[h[0]]){if(h.length!==2*this.movesetorders[t])throw new Error("Bad length in perm gen");for(const a of h)r[m].push(a)}for(let a=0;a<h.length;a+=2)f[h[a]]=!0}for(let l=0;l<r.length;l++)r[l]=r[l].slice();e.push(r)}if(this.cmovesbyslice=e,this.options.moveList){const t=[];for(const s of this.options.moveList)t.push(this.parsemove(s));this.parsedmovelist=t}this.facelisthash.clear(),this.facecentermass=[]}getboundarygeometry(){return{baseplanes:this.baseplanes,facenames:this.facenames,faceplanes:this.faceplanes,vertexnames:this.vertexnames,edgenames:this.edgenames,geonormals:this.geonormals}}getmovesets(e){const t=this.moveplanesets[e].length;let s=[];if(this.parsedmovelist!==void 0)for(const i of this.parsedmovelist)i[1]===e&&(i[4]?s.push([i[2],i[3]]):s.push([t-i[3],t-i[2]]),s.push(i[5]));else if(this.options.vertexMoves&&!this.options.allMoves){const i=this.movesetgeos[e];if(i[1]!==i[3])for(let n=0;n<t;n++)i[1]!=="v"?(this.options.outerBlockMoves?s.push([n+1,t]):s.push([n+1]),s.push(1)):(this.options.outerBlockMoves?s.push([0,n]):s.push([n,n]),s.push(1))}else for(let i=0;i<=t;i++)!this.options.allMoves&&i+i===t||(this.options.outerBlockMoves?i+i>t?s.push([i,t]):s.push([0,i]):s.push([i,i]),s.push(1));if(this.fixedCubie>=0){const i=this.keyface3(this.faces[this.cubies[this.fixedCubie][0]])[e],n=[];for(let o=0;o<s.length;o+=2){let r=s[o];if(i>=r[0]&&i<=r[1])if(r[0]===0)r=[r[1]+1,t];else if(t===r[1])r=[0,r[0]-1];else throw Error("fixed cubie option would disconnect move");let f=!1;for(let l=0;l<n.length;l+=2)if(n[l][0]===r[0]&&n[l][1]===r[1]&&n[l+1]===s[o+1]){f=!0;break}f||(n.push(r),n.push(s[o+1]))}s=n}return s}graybyori(e){let t=this.cubies[e].length;return this.duplicatedCubies[e]&&(t=1),t===1&&(this.options.grayCenters||!this.options.includeCenterOrbits)||t===2&&(this.options.grayEdges||!this.options.includeEdgeOrbits)||t>2&&(this.options.grayCorners||!this.options.includeCornerOrbits)}skipbyori(e){let t=this.cubies[e].length;return this.duplicatedCubies[e]&&(t=1),t===1&&!this.options.includeCenterOrbits||t===2&&!this.options.includeEdgeOrbits||t>2&&!this.options.includeCornerOrbits}skipcubie(e){return this.skipbyori(e)}header(e){return`${e+Re}
${e}
`}writegap(){const e=this.getOrbitsDef(!1),t=[],s=[];for(let n=0;n<e.moveops.length;n++){let o=`M_${ut(this.notationMapper,e.movenames[n])}`,r=!1;o[o.length-1]==="'"&&(o=o.substring(0,o.length-1),r=!0),s.push(o),r?t.push(`${o}:=${e.moveops[n].toPerm().inv().toGap()};`):t.push(`${o}:=${e.moveops[n].toPerm().toGap()};`)}t.push("Gen:=["),t.push(s.join(",")),t.push("];");const i=e.solved.identicalPieces();return t.push(`ip:=[${i.map(n=>`[${n.map(o=>o+1).join(",")}]`).join(",")}];`),t.push("# Size(Group(Gen));"),t.push("# Size(Stabilizer(Group(Gen), ip, OnTuplesSets));"),t.push(""),this.header("# ")+t.join(`
`)}writemathematica(){const e=this.getOrbitsDef(!1),t=[],s=[];t.push(`(* ${this.header("").trim()} *)`);for(let i=0;i<e.moveops.length;i++){let n=`m${ut(this.notationMapper,e.movenames[i])}`,o=!1;n[n.length-1]==="'"&&(n=n.substring(0,n.length-1),o=!0),s.push(n),o?t.push(`${n}=${e.moveops[i].toPerm().inv().toMathematica()};`):t.push(`${n}=${e.moveops[i].toPerm().toMathematica()};`)}return t.push(`gen={${s.join(",")}};`),t.join(`
`)}writeksolve(e="PuzzleGeometryPuzzle"){const t=this.getOrbitsDef(!1);return this.header("# ")+t.toKsolve(e,this.notationMapper).join(`
`)}getKPuzzleDefinition(e=!0,t=!0){const i=this.getOrbitsDef(e,t).toKPuzzleDefinition(t);if(i.experimentalPuzzleDescription=this.puzzleDescription,!i)throw new Error("Missing definition!");return i}getMoveFromBits(e,t,s,i,n,o){const r=[],f=[],l=[];for(const d of this.cubieords)f.push(st(d)),l.push(nt(d));for(let d=e[0];d<=e[1];d++){const v=i[d];for(let m=0;m<v.length;m+=2*o){const a=v.slice(m,m+2*o),u=this.cubiesetnums[a[0]];for(let g=0;g<a.length;g+=2)a[g]=this.cubieordnums[a[g]];let y=2,L=3;s&&(y=a.length-2,L=a.length-1),f[u]===st(this.cubieords[u])&&(f[u]=f[u].slice(),this.orbitoris[u]>1&&!this.options.fixedOrientation&&(l[u]=l[u].slice()));for(let g=0;g<a.length;g+=2)f[u][a[(g+y)%a.length]]=a[g],this.orbitoris[u]>1&&!this.options.fixedOrientation&&(l[u][a[g]]=(a[(g+L)%a.length]-a[(g+1)%a.length]+2*this.orbitoris[u])%this.orbitoris[u])}}let h=new ot(st(24),nt(24),1);for(let d=0;d<this.cubiesetnames.length;d++)if(!(n&&!n[d]))if(this.orbitoris[d]===1||this.options.fixedOrientation)f[d]===st(h.perm.length)?(f[d]!==h.perm&&(h=new ot(f[d],l[d],1)),r.push(h)):r.push(new ot(f[d],l[d],1));else{const v=new Array(l[d].length);for(let m=0;m<f[d].length;m++)v[m]=l[d][f[d][m]];r.push(new ot(f[d],v,this.orbitoris[d]))}let w=new Qt(r);return t!==1&&(w=w.mulScalar(t)),w}omitSet(e){for(const t of this.options.excludeOrbits)if(t===e)return!0;return!1}diffmvsets(e,t,s,i){for(let n=0;n<e.length;n+=2){let o=!1;for(let r=0;!o&&r<t.length;r+=2)i?e[n][0]+t[r][1]===s&&e[n][1]+t[r][0]===s&&e[n+1]===t[r+1]&&(o=!0):e[n][0]===t[r][0]&&e[n][1]===t[r][1]&&e[n+1]===t[r+1]&&(o=!0);if(!o)return!0}return!1}getOrbitsDef(e,t=!0){const s=[];if(e)for(let a=0;a<this.cubiesetnames.length;a++)s.push(1);const i=[],n=[],o=[],r=[];for(let a=0;a<this.moveplanesets.length;a++){const u=this.getmovesets(a);o.push(u),this.options.addRotations?r.push(1):r.push(0)}const f=[];for(let a=0;a<this.moveplanesets.length;a++){const u=this.moveplanesets[a].length;let y=!1;const L=o[a];for(let g=0;g<L.length;g+=2)L[g][0]===0&&L[g][1]===u&&(y=!0);f[a]=y}if(this.options.addRotations&&(this.options.moveList||this.options.fixedPieceType!==null)){for(let a=0;a<this.moverotations.length;a++)r[a]=0;for(let a=0;a<this.moveplanesets.length;a++){if(f[a]){r[a]=3;continue}for(let u=0;u<this.moverotations.length;u++){let y=this.moveplanenormals[a];for(let L=1;L*2<=this.movesetorders[u];L++){if(y=y.rotatepoint(this.moverotations[u][0]),r[u]&L)continue;let g=-1,M=!1;for(let S=0;S<this.moveplanenormals.length;S++)if(y.dist(this.moveplanenormals[S])<K){g=S;break}else if(y.dist(this.moveplanenormals[S].smul(-1))<K){g=S,M=!0;break}if(g<0)throw new Error("Could not find rotation");const R=o[g];(R.length!==o[a].length||this.moveplanesets[a].length!==this.moveplanesets[g].length||this.diffmvsets(R,o[a],this.moveplanesets[g].length,M))&&(r[u]|=L)}}}for(let a=0;a<this.moverotations.length;a++)if(r[a]===0)r[a]=1;else if(r[a]===1)this.movesetorders[a]>3?r[a]=2:r[a]=0;else if(r[a]===3)r[a]=0;else throw new Error("Impossible addrot val")}for(let a=0;a<this.moveplanesets.length;a++)r[a]!==0&&!f[a]&&(o[a].push([0,this.moveplanesets[a].length]),o[a].push(r[a]));for(let a=0;a<this.moveplanesets.length;a++){const u=o[a],y=this.movesetorders[a];for(let M=0;M<u.length;M+=2)for(let R=0;R<M;R+=2)if(u[M][0]===u[R][0]&&u[M][1]===u[R][1])throw new Error("Redundant moves in moveset.");const L=[];for(let M=0;M<u.length;M+=2)for(let R=u[M][0];R<=u[M][1];R++)L[R]=1;const g=this.cmovesbyslice[a];for(let M=0;M<g.length;M++){if(L[M]!==1)continue;const R=g[M];for(let S=0;S<R.length;S+=2*y){if(this.skipcubie(R[S]))continue;const Z=this.cubiesetnums[R[S]];s[Z]=1}}}for(let a=0;a<this.cubiesetnames.length;a++)if(s[a]){if(this.omitSet(this.cubiesetnames[a])){s[a]=0;continue}i.push(this.cubiesetnames[a]),n.push(new Lt(this.cubieords[a],this.options.fixedOrientation?1:this.orbitoris[a]))}const l=[];for(let a=0;a<this.cubiesetnames.length;a++){if(!s[a]||this.omitSet(this.cubiesetnames[a]))continue;const u=[],y=[];for(let L=0;L<this.cubieords[a];L++){if(e)u.push(L);else{const g=this.cubiesetcubies[a][L];u.push(this.cubievaluemap[g])}y.push(0)}l.push(new ot(u,y,this.options.fixedOrientation?1:this.orbitoris[a]))}const h=[],w=[],d=[],v=[];if(t)for(let a=0;a<this.moveplanesets.length;a++){const y=this.moveplanesets[a].length,L=o[a],g=this.movesetgeos[a];for(let M=0;M<L.length;M+=2){const R=L[M];let S,Z=!1;if(this.parsedmovelist!==void 0)for(const p of this.parsedmovelist){if(p[1]!==a)continue;let B=[];p[4]?B=[p[2],p[3]]:B=[y-p[3],y-p[2]],B[0]===R[0]&&B[1]===R[1]&&(S=p[0],Z=!p[4])}if(S)h.push(S),w.push(!0);else{const p=Ue(g,R,y);Z=p[1];const B=p[0];L[M+1]===1?h.push(B):h.push(B+L[M+1]),w.push(!1)}v.push(R[0]===0&&R[1]===y);const I=this.getMoveFromBits(R,L[M+1],Z,this.cmovesbyslice[a],s,this.movesetorders[a]);d.push(I)}}let m=new At(i,n,new Ht(l),h,d,v,w);return this.options.optimizeOrbits&&(m=m.optimize()),this.options.scrambleAmount!==0&&m.scramble(this.options.scrambleAmount),m}getScramble(e=0){const t=this.getOrbitsDef(!1);return t.toKTransformationData(t.getScrambleTransformation(e))}getMovesAsPerms(){return this.getOrbitsDef(!1).moveops.map(e=>e.toPerm())}showcanon(e){de(this.getOrbitsDef(!1),e)}getsolved(){const e=[];for(let t=0;t<this.baseFaceCount;t++)for(let s=0;s<this.stickersperface;s++)e.push(t);return new at(e)}getOrientationRotation(e){const[t,[s,i,n]]=e[0],o=new G(0,s,-i,n),[r,[f,l,h]]=e[1],w=new G(0,f,-l,h);let d=null,v=null;const m=this.swizzler.unswizzle(t),a=this.swizzler.unswizzle(r);for(const g of this.geonormals)m===g[1]&&(d=g[0]),a===g[1]&&(v=g[0]);if(!d)throw new Error(`Could not find feature ${t}`);if(!v)throw new Error(`Could not find feature ${r}`);const u=d.pointrotation(o);return v.rotatepoint(u).unproject(o).pointrotation(w.unproject(o)).mul(u)}getInitial3DRotation(){const e=this.baseFaceCount;let t=null;if(this.options.puzzleOrientation?t=this.options.puzzleOrientation:this.options.puzzleOrientations&&(t=this.options.puzzleOrientations[e]),t||(t=je()[e]),!t)throw new Error("No default orientation?");return this.getOrientationRotation(t)}generate2dmapping(e=800,t=500,s=10,i=!1,n=.92){e-=2*s,t-=2*s;function o(F,z){let j=F[1][0]-F[0][0],T=F[1][1]-F[0][1];const P=2*Math.PI/z,A=Math.cos(P),X=Math.sin(P);for(let J=2;J<z;J++){const q=j*A+T*X;T=T*A-j*X,j=q,F.push([F[J-1][0]+j,F[J-1][1]+T])}}this.genperms();const l=this.getboundarygeometry().facenames[0][0].length,h=this.net;if(h===null)throw new Error("No net?");const w={};let d=0,v=0,m=1,a=0;w[h[0][0]]=[[1,0],[0,0]],o(w[h[0][0]],l);for(const F of h){const z=F[0];if(!w[z])throw new Error("Bad edge description; first edge not connected.");for(let j=1;j<F.length;j++){const T=F[j];T===""||w[T]||(w[T]=[w[z][j%l],w[z][(j+l-1)%l]],o(w[T],l))}}for(const F in w){const z=w[F];for(const j of z)d=Math.min(d,j[0]),m=Math.max(m,j[0]),v=Math.min(v,j[1]),a=Math.max(a,j[1])}const u=Math.min(e/(m-d),t/(a-v)),y=.5*(e-u*(m+d)),L=.5*(t-u*(a+v)),g={},M=this.getboundarygeometry(),R={},S=[[u+y,L],[y,L]];R[h[0][0]]=S,o(R[h[0][0]],l),g[this.facenames[0][1]]=this.project2d(0,0,[new G(0,S[0][0],S[0][1],0),new G(0,S[1][0],S[1][1],0)]);const Z=[];Z[0]=0;for(const F of h){const z=F[0];if(!R[z])throw new Error("Bad edge description; first edge not connected.");let j=-1;for(let P=0;P<M.facenames.length;P++)if(z===M.facenames[P][1]){j=P;break}if(j<0)throw new Error(`Could not find first face name ${z}`);const T=M.facenames[j][0];for(let P=1;P<F.length;P++){const A=F[P];if(A===""||R[A])continue;R[A]=[R[z][P%l],R[z][(P+l-1)%l]],o(R[A],l);const X=Z[j],J=T[(X+P)%l].sum(T[(X+P+l-1)%l]).smul(.5),q=lt(M.edgenames,J),_=M.edgenames[q][1],V=Pe(_,this.facenames),rt=V[z===V[0]?1:0];let tt=-1;for(let Q=0;Q<M.facenames.length;Q++)if(rt===M.facenames[Q][1]){tt=Q;break}if(tt<0)throw new Error("Could not find second face name");const et=M.facenames[tt][0];for(let Q=0;Q<et.length;Q++)if(et[Q].sum(et[(Q+1)%l]).smul(.5).dist(J)<=K){const x=R[z][(P+l-1)%l],C=R[z][P%l];Z[tt]=Q,g[rt]=this.project2d(tt,Q,[new G(0,C[0],C[1],0),new G(0,x[0],x[1],0)]);break}}}let I=0,p=0;const B=this.getInitial3DRotation();for(let F of this.faces){i&&(F=F.rotate(B));for(let z=0;z<F.length;z++)I=Math.max(I,Math.abs(F.get(z).b)),p=Math.max(p,Math.abs(F.get(z).c))}const U=Math.min(t/p/2,(e-s)/I/4);return(F,z)=>{if(i){z=z.rotatepoint(B);const j=.5*s+.25*e,T=this.baseplanes[F].rotateplane(B).d<0?1:-1;return[s+e*.5+T*(j-z.b*U),s+t*.5+z.c*U]}else{const j=g[this.facenames[F][1]];return[s+n*z.dot(j[0])+j[2].b,s+t-n*z.dot(j[1])-j[2].c]}}}generatesvg(e=800,t=500,s=10,i=!1){const n=this.generate2dmapping(e,t,s,i);function o(d,v,m){return`<polygon id="${d}" class="sticker" style="fill: ${m}" points="${v.map(a=>`${a[0]} ${a[1]}`).join(" ")}"/>
`}const r=this.getsolved(),f=[],l=[];for(let d=0;d<this.baseFaceCount;d++)f[d]=this.colors[this.facenames[d][1]];for(let d=0;d<this.faces.length;d++){const v=this.faces[d],m=Math.floor(d/this.stickersperface),a=[];for(let u=0;u<v.length;u++)a.push(n(m,v.get(u)));l.push(a)}const h=[];for(let d=0;d<this.baseFaceCount;d++){h.push("<g>"),h.push(`<title>${this.facenames[d][1]}</title>
`);for(let v=0;v<this.stickersperface;v++){const m=d*this.stickersperface+v,a=this.facetocubie[m],u=this.facetoord[m],y=this.cubiesetnums[a],L=this.cubieordnums[a],g=this.graybyori(a)?"#808080":f[r.p[m]];let M=`${this.cubiesetnames[y]}-l${L}-o${u}`;if(h.push(o(M,l[m],g)),this.duplicatedFaces[m])for(let R=1;R<this.duplicatedFaces[m];R++)M=`${this.cubiesetnames[y]}-l${L}-o${R}`,h.push(o(M,l[m],g))}h.push("</g>")}return`<svg id="svg" xmlns="http://www.w3.org/2000/svg" xmlns:xlink="http://www.w3.org/1999/xlink" viewBox="0 0 800 500">
<style type="text/css"><![CDATA[.sticker { stroke: #000000; stroke-width: 1px; }]]></style>
${h.join("")}</svg>`}get3d(e){const t=[],s=this.getInitial3DRotation(),i=[],n=.52*this.basefaces[0].get(0).len();for(let l=0;l<this.basefaces.length;l++){const h=this.basefaces[l].rotate(s),w=this.facenames[l][1];i.push({coords:xt(h,n),name:w})}for(let l=0;l<this.faces.length;l++){const h=Math.floor(l/this.stickersperface),w=this.facetocubie[l],d=this.facetoord[l],v=this.cubiesetnums[w],m=this.cubieordnums[w];let a=this.graybyori(w)?e!=null&&e.darkIgnoredOrbits?"#222222":"#808080":this.colors[this.facenames[h][1]];e!=null&&e.stickerColors&&(a=e.stickerColors[l]);const u=this.faces[l].rotate(s);t.push({coords:xt(u,n),color:a,orbit:this.cubiesetnames[v],ord:m,ori:d,face:h});let y=u;if(this.duplicatedFaces[l]){const L=y.length/this.duplicatedFaces[l];for(let g=1;g<this.duplicatedFaces[l];g++){for(let M=0;M<L;M++)y=y.rotateforward();t.push({coords:xt(y,n),color:a,orbit:this.cubiesetnames[v],ord:m,ori:g,face:h,isDup:!0})}}}const o=[];for(let l=0;l<this.movesetgeos.length;l++){const h=this.movesetgeos[l],w=this.movesetorders[l];for(const d of this.geonormals)h[0]===d[1]&&h[1]===d[2]&&(o.push({coordinates:ft(d[0].rotatepoint(s),1),quantumMove:new k(h[0]),order:w}),o.push({coordinates:ft(d[0].rotatepoint(s).smul(-1),1),quantumMove:new k(h[2]),order:w}))}const r=this.generate2dmapping(2880,2160,0,!1,1),f=(()=>{const l=s.invrot();return(h,w)=>{let d=new G(0,w[0]*n,-w[1]*n,w[2]*n);d=d.rotatepoint(l);const v=r(h,d);return v[0]/=2880,v[1]=1-v[1]/2160,v}})().bind(this);return{stickers:t,faces:i,axis:o,unswizzle:this.unswizzle.bind(this),notationMapper:this.notationMapper,textureMapper:{getuv:f}}}getGeoNormal(e){const t=this.getInitial3DRotation(),s=this.swizzler.unswizzle(e);for(const i of this.geonormals)if(s===i[1]){const n=ft(i[0].rotatepoint(t),1);return Math.abs(n[0])<K&&Math.abs(n[2])<K&&(n[0]=0,n[2]=1e-6),n}}getfaceindex(e){const t=this.stickersperface;return Math.floor(e/t)}textForTwizzleExplorer(){return`Faces ${this.baseplanerot.length}
Stickers per face ${this.stickersperface}
Short edge ${this.shortedge}
Cubies ${this.cubies.length}
Edge distance ${this.edgedistance}
Vertex distance ${this.vertexdistance}`}writeSchreierSims(e){const s=this.getOrbitsDef(!1).reassemblySize();e(`Reassembly size is ${s}`);const i=Be(this.getMovesAsPerms(),e),n=s/i;e(`Ratio is ${n}`)}},He=class{constructor(e,t){b(this,"orbitNames");this.pg=e,this.orbitNames=t.orbitnames}lookupMove(e){const t=this.pg.parseMove(e);if(this.pg.parsedmovelist){let o=!1;for(const r of this.pg.parsedmovelist)r[1]===t[1]&&r[2]===t[2]&&r[3]===t[3]&&r[4]===t[4]&&(o=!0);if(!o)return null}let s=[t[2],t[3]];if(!t[4]){const o=this.pg.moveplanesets[t[1]].length;s=[o-t[3],o-t[2]]}const i=this.pg.getMoveFromBits(s,t[5],!t[4],this.pg.cmovesbyslice[t[1]],void 0,this.pg.movesetorders[t[1]]);return At.transformToKTransformationData(this.orbitNames,i)}remapKPuzzleDefinition(e){return he(e,this.pg.notationMapper)}};export{Ge as EXPERIMENTAL_PUZZLE_BASE_SHAPES,Ke as EXPERIMENTAL_PUZZLE_CUT_TYPES,He as ExperimentalPGNotation,Oe as PuzzleGeometry,G as Quat,Ne as getPG3DNamedPuzzles,Ae as getPuzzleDescriptionString,Ce as getPuzzleGeometryByDesc,Qe as getPuzzleGeometryByName,Te as parseOptions,Wt as parsePuzzleDescription,Be as schreierSims};
